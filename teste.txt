version: '3.8'

services:

  # PostgreSQL Service
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    env_file:
    - airflow.env
    ports:
      - "5432:5432"
    networks:
      - airflow-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "airflow"]
        interval: 5s
        retries: 5
    restart: always

  # Airflow Scheduler
  scheduler:
    build:
      context: .
    container_name: airflow_scheduler
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      - postgres
    networks:
      - airflow-net
    command: scheduler

  # Airflow Webserver
  webserver:
    build:
      context: .
    container_name: airflow_webserver
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
    depends_on:
      - scheduler
      - postgres
    networks:
      - airflow-net
    command: webserver


  # Airflow Triggerer
  triggerer:
    build:
      context: .
    container_name: airflow_triggerer
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on:
      - postgres
      - webserver
    networks:
      - airflow-net
    command: triggerer

  # Spark Master
  spark-master:
    build: ./spark/master
    container_name: spark-master
    ports:
      - "8082:8080"
      - "7077:7077"
    networks:
      - airflow-net

  # Spark Worker
  spark-worker:
    build: ./spark/worker
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - airflow-net

  # Metabase Service
  metabase:
    image: metabase/metabase:v0.50.4
    container_name: airflow_metabase
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./include/data/metabase:/metabase-data
    networks:
      - airflow-net

  # Docker Proxy
  docker-proxy:
    image: alpine/socat
    container_name: airflow_docker-proxy
    command: "TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock"
    ports:
      - "2376:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - airflow-net

networks:
  airflow-net:
    driver: bridge

volumes:
  postgres_data:
